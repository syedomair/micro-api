// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/public.proto

/*
Package public is a generated protocol buffer package.

It is generated from these files:
	proto/public.proto

It has these top-level messages:
	Client
	User
	Response
	LoginRequest
	UserMessage
	UserTokenMessage
*/
package public

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Client struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	ApiKey    string `protobuf:"bytes,3,opt,name=api_key,json=apiKey" json:"api_key,omitempty"`
	Secret    string `protobuf:"bytes,4,opt,name=secret" json:"secret,omitempty"`
	Status    string `protobuf:"bytes,5,opt,name=status" json:"status,omitempty"`
	CreatedAt string `protobuf:"bytes,6,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,7,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *Client) Reset()                    { *m = Client{} }
func (m *Client) String() string            { return proto.CompactTextString(m) }
func (*Client) ProtoMessage()               {}
func (*Client) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Client) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Client) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Client) GetApiKey() string {
	if m != nil {
		return m.ApiKey
	}
	return ""
}

func (m *Client) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Client) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Client) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *Client) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type User struct {
	Id        string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	ClientId  string `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FirstName string `protobuf:"bytes,3,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	Password  string `protobuf:"bytes,6,opt,name=password" json:"password,omitempty"`
	IsAdmin   string `protobuf:"bytes,7,opt,name=is_admin,json=isAdmin" json:"is_admin,omitempty"`
	CreatedAt string `protobuf:"bytes,8,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	UpdatedAt string `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt" json:"updated_at,omitempty"`
}

func (m *User) Reset()                    { *m = User{} }
func (m *User) String() string            { return proto.CompactTextString(m) }
func (*User) ProtoMessage()               {}
func (*User) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *User) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *User) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetIsAdmin() string {
	if m != nil {
		return m.IsAdmin
	}
	return ""
}

func (m *User) GetCreatedAt() string {
	if m != nil {
		return m.CreatedAt
	}
	return ""
}

func (m *User) GetUpdatedAt() string {
	if m != nil {
		return m.UpdatedAt
	}
	return ""
}

type Response struct {
	Result string            `protobuf:"bytes,1,opt,name=result" json:"result,omitempty"`
	Error  map[string]string `protobuf:"bytes,2,rep,name=error" json:"error,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Data   map[string]string `protobuf:"bytes,3,rep,name=data" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *Response) Reset()                    { *m = Response{} }
func (m *Response) String() string            { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()               {}
func (*Response) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Response) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func (m *Response) GetError() map[string]string {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Response) GetData() map[string]string {
	if m != nil {
		return m.Data
	}
	return nil
}

type LoginRequest struct {
	Email    string `protobuf:"bytes,1,opt,name=email" json:"email,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *LoginRequest) Reset()                    { *m = LoginRequest{} }
func (m *LoginRequest) String() string            { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()               {}
func (*LoginRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *LoginRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type UserMessage struct {
	UserId    string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	ClientId  string `protobuf:"bytes,2,opt,name=client_id,json=clientId" json:"client_id,omitempty"`
	FirstName string `protobuf:"bytes,3,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	LastName  string `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	Email     string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
}

func (m *UserMessage) Reset()                    { *m = UserMessage{} }
func (m *UserMessage) String() string            { return proto.CompactTextString(m) }
func (*UserMessage) ProtoMessage()               {}
func (*UserMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UserMessage) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserMessage) GetClientId() string {
	if m != nil {
		return m.ClientId
	}
	return ""
}

func (m *UserMessage) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UserMessage) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *UserMessage) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type UserTokenMessage struct {
	UserId string `protobuf:"bytes,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	Token  string `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
}

func (m *UserTokenMessage) Reset()                    { *m = UserTokenMessage{} }
func (m *UserTokenMessage) String() string            { return proto.CompactTextString(m) }
func (*UserTokenMessage) ProtoMessage()               {}
func (*UserTokenMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *UserTokenMessage) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserTokenMessage) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func init() {
	proto.RegisterType((*Client)(nil), "public.Client")
	proto.RegisterType((*User)(nil), "public.User")
	proto.RegisterType((*Response)(nil), "public.Response")
	proto.RegisterType((*LoginRequest)(nil), "public.LoginRequest")
	proto.RegisterType((*UserMessage)(nil), "public.UserMessage")
	proto.RegisterType((*UserTokenMessage)(nil), "public.UserTokenMessage")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PublicService service

type PublicServiceClient interface {
	Register(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error)
	Authenticate(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Response, error)
}

type publicServiceClient struct {
	cc *grpc.ClientConn
}

func NewPublicServiceClient(cc *grpc.ClientConn) PublicServiceClient {
	return &publicServiceClient{cc}
}

func (c *publicServiceClient) Register(ctx context.Context, in *User, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/public.PublicService/Register", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *publicServiceClient) Authenticate(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := grpc.Invoke(ctx, "/public.PublicService/Authenticate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PublicService service

type PublicServiceServer interface {
	Register(context.Context, *User) (*Response, error)
	Authenticate(context.Context, *LoginRequest) (*Response, error)
}

func RegisterPublicServiceServer(s *grpc.Server, srv PublicServiceServer) {
	s.RegisterService(&_PublicService_serviceDesc, srv)
}

func _PublicService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/public.PublicService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicServiceServer).Register(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _PublicService_Authenticate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PublicServiceServer).Authenticate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/public.PublicService/Authenticate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PublicServiceServer).Authenticate(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PublicService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "public.PublicService",
	HandlerType: (*PublicServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Register",
			Handler:    _PublicService_Register_Handler,
		},
		{
			MethodName: "Authenticate",
			Handler:    _PublicService_Authenticate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/public.proto",
}

func init() { proto.RegisterFile("proto/public.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 563 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0x9d, 0xc4, 0xb5, 0xa7, 0x01, 0x85, 0x55, 0xa1, 0xc6, 0x01, 0xa9, 0xf2, 0xa9, 0xea,
	0x21, 0x51, 0xcb, 0x81, 0xaa, 0x27, 0xa2, 0xd2, 0x43, 0xc5, 0x8f, 0x50, 0x0a, 0x67, 0x6b, 0x6b,
	0x0f, 0x61, 0x55, 0xc7, 0x36, 0xbb, 0xe3, 0xa0, 0x5c, 0x79, 0x05, 0xc4, 0x43, 0x70, 0xe6, 0x51,
	0x78, 0x05, 0x1e, 0x02, 0x71, 0x42, 0xbb, 0x6b, 0xa7, 0x25, 0xe5, 0x47, 0x5c, 0xb8, 0xed, 0xf7,
	0xcd, 0x8f, 0xe7, 0x9b, 0xf9, 0x64, 0x60, 0x95, 0x2c, 0xa9, 0x1c, 0x57, 0xf5, 0x79, 0x2e, 0xd2,
	0x91, 0x01, 0xcc, 0xb3, 0x28, 0xba, 0x37, 0x2b, 0xcb, 0x59, 0x8e, 0x63, 0x5e, 0x89, 0x31, 0x2f,
	0x8a, 0x92, 0x38, 0x89, 0xb2, 0x50, 0x36, 0x2b, 0xfe, 0xec, 0x80, 0x77, 0x9c, 0x0b, 0x2c, 0x88,
	0xdd, 0x04, 0x57, 0x64, 0xa1, 0xb3, 0xe3, 0xec, 0x06, 0x53, 0x57, 0x64, 0x8c, 0x41, 0xb7, 0xe0,
	0x73, 0x0c, 0x5d, 0xc3, 0x98, 0x37, 0xdb, 0x86, 0x0d, 0x5e, 0x89, 0xe4, 0x02, 0x97, 0x61, 0xc7,
	0xd0, 0x1e, 0xaf, 0xc4, 0x13, 0x5c, 0xb2, 0x3b, 0xe0, 0x29, 0x4c, 0x25, 0x52, 0xd8, 0xb5, 0xbc,
	0x45, 0x86, 0x27, 0x4e, 0xb5, 0x0a, 0x7b, 0x0d, 0x6f, 0x10, 0xbb, 0x0f, 0x90, 0x4a, 0xe4, 0x84,
	0x59, 0xc2, 0x29, 0xf4, 0x4c, 0x2c, 0x68, 0x98, 0x09, 0xe9, 0x70, 0x5d, 0x65, 0x6d, 0x78, 0xc3,
	0x86, 0x1b, 0x66, 0x42, 0xf1, 0x77, 0x07, 0xba, 0xaf, 0x14, 0xca, 0x6b, 0x33, 0x0f, 0x21, 0x48,
	0x8d, 0x9a, 0x44, 0x64, 0xcd, 0xe0, 0xbe, 0x25, 0x4e, 0x33, 0xdd, 0xf4, 0xb5, 0x90, 0x8a, 0x12,
	0x23, 0xcb, 0xce, 0x1f, 0x18, 0xe6, 0xb9, 0xd6, 0x36, 0x84, 0x20, 0xe7, 0x6d, 0xd4, 0xaa, 0xf0,
	0x35, 0x61, 0x82, 0x5b, 0xd0, 0xc3, 0x39, 0x17, 0x79, 0x23, 0xc3, 0x02, 0x16, 0x81, 0x5f, 0x71,
	0xa5, 0xde, 0x95, 0x32, 0x6b, 0x34, 0xac, 0x30, 0xbb, 0x0b, 0xbe, 0x50, 0x09, 0xcf, 0xe6, 0xa2,
	0x68, 0x04, 0x6c, 0x08, 0x35, 0xd1, 0x70, 0x4d, 0xbc, 0xff, 0x67, 0xf1, 0xc1, 0xba, 0xf8, 0x6f,
	0x0e, 0xf8, 0x53, 0x54, 0x55, 0x59, 0x28, 0xd4, 0xfb, 0x95, 0xa8, 0xea, 0x9c, 0x9a, 0x25, 0x34,
	0x88, 0xed, 0x43, 0x0f, 0xa5, 0x2c, 0x65, 0xe8, 0xee, 0x74, 0x76, 0x37, 0x0f, 0x86, 0xa3, 0xc6,
	0x1b, 0x6d, 0xe1, 0xe8, 0x44, 0x47, 0x4f, 0x0a, 0x92, 0xcb, 0xa9, 0xcd, 0x64, 0x23, 0xe8, 0x66,
	0x9c, 0x78, 0xd8, 0x31, 0x15, 0xd1, 0xb5, 0x8a, 0xc7, 0x9c, 0xb8, 0x2d, 0x30, 0x79, 0xd1, 0x21,
	0xc0, 0x65, 0x13, 0x36, 0x80, 0x8e, 0x76, 0x85, 0x9d, 0x42, 0x3f, 0xf5, 0xca, 0x16, 0x3c, 0xaf,
	0x5b, 0x03, 0x59, 0x70, 0xe4, 0x1e, 0x3a, 0xd1, 0x43, 0x08, 0x56, 0xcd, 0xfe, 0xa5, 0x30, 0x7e,
	0x04, 0xfd, 0xa7, 0xe5, 0x4c, 0x14, 0x53, 0x7c, 0x5b, 0xa3, 0xa2, 0xcb, 0xab, 0x38, 0xbf, 0xbb,
	0x8a, 0xfb, 0xf3, 0x55, 0xe2, 0x8f, 0x0e, 0x6c, 0x6a, 0xe7, 0x3c, 0x43, 0xa5, 0xf8, 0xcc, 0x18,
	0xba, 0x56, 0x28, 0x93, 0x95, 0x8b, 0x3c, 0x0d, 0x4f, 0xff, 0xb7, 0x93, 0xe2, 0x09, 0x0c, 0xf4,
	0x58, 0x2f, 0xcb, 0x0b, 0x2c, 0xfe, 0x3a, 0xdb, 0x16, 0xf4, 0x48, 0x27, 0xb6, 0x0b, 0x32, 0xe0,
	0xe0, 0x93, 0x03, 0x37, 0x5e, 0x98, 0x9b, 0x9d, 0xa1, 0x5c, 0x88, 0x14, 0xd9, 0xb1, 0x36, 0xca,
	0x4c, 0x28, 0x42, 0xc9, 0xfa, 0xed, 0x3d, 0xf5, 0x67, 0xa2, 0xc1, 0xfa, 0x75, 0xe3, 0xed, 0xf7,
	0x5f, 0xbe, 0x7e, 0x70, 0x6f, 0xc5, 0xfd, 0xf1, 0x62, 0x7f, 0x2c, 0x9b, 0xaa, 0x23, 0x67, 0x8f,
	0x9d, 0x41, 0x7f, 0x52, 0xd3, 0x1b, 0x2c, 0x48, 0xa4, 0x9c, 0x90, 0x6d, 0xb5, 0xa5, 0x57, 0x2f,
	0xf1, 0x8b, 0x86, 0x43, 0xd3, 0xf0, 0x76, 0x3c, 0xd0, 0x0d, 0xf9, 0x95, 0x0e, 0x47, 0xce, 0xde,
	0xb9, 0x67, 0xfe, 0x3e, 0x0f, 0x7e, 0x04, 0x00, 0x00, 0xff, 0xff, 0x08, 0x26, 0xd9, 0x0b, 0xb9,
	0x04, 0x00, 0x00,
}
