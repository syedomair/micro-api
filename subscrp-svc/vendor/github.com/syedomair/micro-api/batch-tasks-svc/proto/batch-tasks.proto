syntax = "proto3";

package batch_tasks;

import "google/api/annotations.proto";

service BatchTasksService {
    rpc GetAllUser(RequestQuery) returns(ResponseBatchTask) {
        option(google.api.http) = {
            get: "/v1/batch/users"
        };
    }
    rpc GetAllUserStatus(BatchTask) returns(ResponseBatchTask) {
        option(google.api.http) = {
            get: "/v1/batch/users/status/{id}"
        };
    }
    rpc GetAllUserOutput(BatchTask) returns(ResponseList) {
        option(google.api.http) = {
            get: "/v1/batch/users/output/{id}"
        };
    }
}

message BatchTask {
    string id = 1;
    string client_id = 2;
    string api_name = 3;
    string status = 4;
    string s3_url = 5;
    string created_at = 6;
    string completed_at = 7;
}

message ResponseBatchTask {
    string result = 1;
    map < string, string > error = 2;
    BatchTask data  = 3;
}
message Response {
    string result = 1;
    map < string, string > error = 2;
    map < string, string > data = 3;
}

message ResponseList {
    string result = 1;
    map < string, string > error = 2;
    UserList data = 3;
}

message UserShorten {
    string id = 1;
    string client_id = 2;
    string first_name = 3;
    string last_name = 4;
    string email = 5;
    string is_admin = 6;
    string created_at = 7;
    string updated_at = 8;
}
message UserList {
    string offset = 1;
    string limit = 2;
    string count = 3;
    repeated UserShorten list = 4;
}
message RequestQuery {
    string offset = 1;
    string limit = 2;
    string orderby = 3;
    string sort = 4;
    string filter = 5;
    string search = 6;
}

message BatchTaskMessage {
    string batch_task_id = 1;
    string client_id = 2;
    string limit = 3;
    string offset = 4;
    string orderby = 5;
    string sort = 6;
    string filter = 7;
    string search = 8;
}
